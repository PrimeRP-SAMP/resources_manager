set(LIB_NAME ${PROJECT_NAME}_library)

if (STATIC_LIBRARY)
    add_library(${LIB_NAME} STATIC rm_tree.cpp rm_entry.cpp rm_cdn.cpp resources_manager.cpp)
else()
    add_library(${LIB_NAME} SHARED rm_tree.cpp rm_entry.cpp rm_cdn.cpp resources_manager.cpp)
endif ()
prepare_curl(${LIB_NAME})
prepare_zstd(${LIB_NAME})
prepare_json(${LIB_NAME})
if (NOT ANDROID)
    prepare_glog(${LIB_NAME})
else ()
    prepare_fmt(${LIB_NAME})
    target_link_libraries(${LIB_NAME} log)
endif ()

target_precompile_headers(${LIB_NAME} PRIVATE pch.h)
if (NOT STATIC_LIBRARY)
    target_compile_definitions(${LIB_NAME} PRIVATE RM_BUILDING_DLL RM_EXPORT_SYMBOLS)
endif ()
if (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC") # Pure MSVC compiler only
    target_compile_options(${LIB_NAME} PRIVATE "/Zc:preprocessor")
endif ()
